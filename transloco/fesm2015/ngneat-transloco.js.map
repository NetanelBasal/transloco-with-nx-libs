{"version":3,"file":"ngneat-transloco.js.map","sources":["ng://@ngneat/transloco/lib/transloco.loader.ts","ng://@ngneat/transloco/lib/helpers.ts","ng://@ngneat/transloco/lib/transloco.transpiler.ts","ng://@ngneat/transloco/lib/transloco.config.ts","ng://@ngneat/transloco/lib/transloco-missing-handler.ts","ng://@ngneat/transloco/lib/transloco.interceptor.ts","ng://@ngneat/transloco/lib/transloco-fallback-strategy.ts","ng://@ngneat/transloco/lib/merge-config.ts","ng://@ngneat/transloco/lib/shared.ts","ng://@ngneat/transloco/lib/resolve-loader.ts","ng://@ngneat/transloco/lib/get-fallbacks-loaders.ts","ng://@ngneat/transloco/lib/transloco.service.ts","ng://@ngneat/transloco/lib/loader-component.component.ts","ng://@ngneat/transloco/lib/template-handler.ts","ng://@ngneat/transloco/lib/transloco-lang.ts","ng://@ngneat/transloco/lib/transloco-loading-template.ts","ng://@ngneat/transloco/lib/transloco-scope.ts","ng://@ngneat/transloco/lib/lang-resolver.ts","ng://@ngneat/transloco/lib/scope-resolver.ts","ng://@ngneat/transloco/lib/transloco.directive.ts","ng://@ngneat/transloco/lib/transloco.pipe.ts","ng://@ngneat/transloco/lib/transloco.module.ts","ng://@ngneat/transloco/lib/transloco-testing.module.ts","ng://@ngneat/transloco/lib/browser-lang.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Translation } from './types';\n\nexport interface TranslocoLoader {\n  getTranslation(lang: string): Observable<Translation> | Promise<Translation>;\n}\n\nexport class DefaultLoader implements TranslocoLoader {\n  constructor(private translations: Map<string, Translation>) {}\n\n  getTranslation(lang: string): Observable<Translation> {\n    return of(this.translations.get(lang) || {});\n  }\n}\n\nexport const TRANSLOCO_LOADER = new InjectionToken<Translation>('TRANSLOCO_LOADER');\n","import { ProviderScope, Translation } from './types';\nimport flat from 'flat';\n\nexport function getValue(obj: object, path: string) {\n  /* For cases where the key is like: 'general.something.thing' */\n  if(obj && obj.hasOwnProperty(path)) {\n    return obj[path];\n  }\n  return path.split('.').reduce((p, c) => p && p[c], obj);\n}\n\nexport function setValue(obj: any, prop: string, val: any) {\n  obj = { ...obj };\n\n  const split = prop.split('.');\n  const lastIndex = split.length - 1;\n\n  split.reduce((acc, part, index) => {\n    if(index === lastIndex) {\n      acc[part] = val;\n    } else {\n      acc[part] = Array.isArray(acc[part]) ? acc[part].slice() : { ...acc[part] };\n    }\n\n    return acc && acc[part];\n  }, obj);\n\n  return obj;\n}\n\nexport function size(collection) {\n  if(!collection) {\n    return 0;\n  }\n\n  if(Array.isArray(collection)) {\n    return collection.length;\n  }\n\n  if(isObject(collection)) {\n    return Object.keys(collection).length;\n  }\n\n  return !!collection ? collection.length : 0;\n}\n\nexport function isEmpty(collection) {\n  return size(collection) === 0;\n}\n\nexport function isFunction(val: any): val is Function {\n  return typeof val === 'function';\n}\n\nexport function isString(val: any): val is string {\n  return typeof val === 'string';\n}\n\nexport function isNumber(val: any): val is number {\n  return typeof val === 'number';\n}\n\nexport function isObject(item): boolean {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\nexport function coerceArray(val) {\n  return Array.isArray(val) ? val : [val];\n}\n\n/*\n * @example\n *\n * given: path-to-happiness => pathToHappiness\n * given: path_to_happiness => pathToHappiness\n * given: path-to_happiness => pathToHappiness\n *\n */\nexport function toCamelCase(str: string): string {\n  return str\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) => (index == 0 ? word.toLowerCase() : word.toUpperCase()))\n    .replace(/\\s+|_|-|\\//g, '');\n}\n\nexport function isBrowser() {\n  return typeof window !== 'undefined';\n}\n\nexport function isNil(value: any) {\n  return value === null || value === undefined;\n}\n\nexport function isDefined(value: any) {\n  return isNil(value) === false;\n}\n\nexport function toNumber(value: number | string): number | null {\n  if(isNumber(value)) return value;\n\n  if(isString(value) && !isNaN(Number(value) - parseFloat(value))) {\n    return Number(value);\n  }\n\n  return null;\n}\n\nexport function isScopeObject(item: any): item is ProviderScope {\n  return item && typeof item.scope === 'string';\n}\n\nexport function hasInlineLoader(item: any): item is ProviderScope {\n  return item && isObject(item.loader);\n}\n\nexport function unflatten(obj: Translation): Translation {\n  return flat.unflatten(obj, { safe: true });\n}\n\nexport function flatten(obj: Translation): Translation {\n  return flat(obj, { safe: true });\n}\n","import { InjectionToken } from '@angular/core';\nimport { HashMap, Translation } from './types';\nimport { getValue, isString, isObject, setValue, isDefined } from './helpers';\n\nexport const TRANSLOCO_TRANSPILER = new InjectionToken('TRANSLOCO_TRANSPILER');\n\nexport interface TranslocoTranspiler {\n  transpile(value: any, params: HashMap<any>, translation: HashMap): any;\n}\n\nexport class DefaultTranspiler implements TranslocoTranspiler {\n  transpile(value: any, params: HashMap<any> = {}, translation: Translation): any {\n    if (isString(value)) {\n      return value.replace(/{{(.*?)}}/g, function(_, match) {\n        match = match.trim();\n        if (isDefined(params[match])) {\n          return params[match];\n        }\n\n        return isDefined(translation[match]) ? translation[match] : '';\n      });\n    }\n\n    if (isObject(value) && params) {\n      /**\n       *\n       * @example\n       *\n       * const en = {\n       *  a: {\n       *    b: {\n       *      c: \"Hello {{ value }}\"\n       *    }\n       *  }\n       * }\n       *\n       * const params =  {\n       *  \"b.c\": { value: \"Transloco \"}\n       * }\n       *\n       * service.selectTranslate('a', params);\n       *\n       * // the first param will be the result of `en.a`.\n       * // the second param will be `params`.\n       * parser.transpile(value, params, {});\n       *\n       *\n       */\n      Object.keys(params).forEach(p => {\n        // get the value of \"b.c\" inside \"a\" => \"Hello {{ value }}\"\n        const v = getValue(value, p);\n        // get the params of \"b.c\" => { value: \"Transloco\" }\n        const getParams = getValue(params, p);\n\n        // transpile the value => \"Hello Transloco\"\n        const transpiled = this.transpile(v, getParams, translation);\n\n        // set \"b.c\" to `transpiled`\n        value = setValue(value, p, transpiled);\n      });\n    }\n\n    return value;\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { AvailableLangs, HashMap } from './types';\n\nexport type TranslocoConfig = {\n  defaultLang: string;\n  reRenderOnLangChange?: boolean;\n  prodMode?: boolean;\n  fallbackLang?: string | string[];\n  failedRetries?: number;\n  scopeMapping?: HashMap<string>;\n  availableLangs?: AvailableLangs;\n  flatten?: {\n    aot?: boolean;\n  };\n  missingHandler?: {\n    useFallbackTranslation?: boolean;\n    allowEmpty?: boolean;\n  };\n};\n\nexport const TRANSLOCO_CONFIG = new InjectionToken('TRANSLOCO_CONFIG', {\n  providedIn: 'root',\n  factory: () => {\n    return {};\n  }\n});\n\nexport const defaultConfig: TranslocoConfig = {\n  defaultLang: 'en',\n  reRenderOnLangChange: false,\n  prodMode: false,\n  failedRetries: 2,\n  availableLangs: [],\n  missingHandler: {\n    useFallbackTranslation: false,\n    allowEmpty: false\n  },\n  flatten: {\n    aot: false\n  }\n};\n","import { InjectionToken } from '@angular/core';\nimport { TranslocoConfig } from './transloco.config';\n\nexport const TRANSLOCO_MISSING_HANDLER = new InjectionToken('TRANSLOCO_MISSING_HANDLER');\n\nexport interface TranslocoMissingHandler {\n  handle(key: string, config: TranslocoConfig): any;\n}\n\nexport class DefaultHandler implements TranslocoMissingHandler {\n  handle(key: string, config: TranslocoConfig) {\n    if (!config.prodMode) {\n      const msg = `Missing translation for '${key}'`;\n      console.warn(`%c ${msg}`, 'font-size: 12px; color: red');\n    }\n\n    return key;\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Translation } from './types';\n\nexport const TRANSLOCO_INTERCEPTOR = new InjectionToken('TRANSLOCO_INTERCEPTOR');\n\nexport interface TranslocoInterceptor {\n  preSaveTranslation(translation: Translation, lang: string): Translation;\n\n  preSaveTranslationKey(key: string, value: string, lang: string): string;\n}\n\nexport class DefaultInterceptor implements TranslocoInterceptor {\n  preSaveTranslation(translation: Translation, lang: string): Translation {\n    return translation;\n  }\n\n  preSaveTranslationKey(key: string, value: string, lang: string): string {\n    return value;\n  }\n}\n","import { Inject, InjectionToken } from '@angular/core';\nimport { TRANSLOCO_CONFIG, TranslocoConfig } from './transloco.config';\n\nexport const TRANSLOCO_FALLBACK_STRATEGY = new InjectionToken<TranslocoFallbackStrategy>('TRANSLOCO_FALLBACK_STRATEGY');\n\nexport interface TranslocoFallbackStrategy {\n  getNextLangs(failedLang: string): string[];\n}\n\nexport class DefaultFallbackStrategy implements TranslocoFallbackStrategy {\n  constructor(@Inject(TRANSLOCO_CONFIG) private userConfig: TranslocoConfig) {}\n\n  getNextLangs(failedLang: string) {\n    const fallbackLang = this.userConfig.fallbackLang;\n    if (!fallbackLang) {\n      throw new Error('When using the default fallback, a fallback language must be provided in the config!');\n    }\n\n    return Array.isArray(fallbackLang) ? fallbackLang : [fallbackLang];\n  }\n}\n","import { TranslocoConfig } from './transloco.config';\n\nexport function mergeConfig(defaultConfig: TranslocoConfig, userConfig: Partial<TranslocoConfig>) {\n  return {\n    ...defaultConfig,\n    ...userConfig,\n    missingHandler: {\n      ...defaultConfig.missingHandler,\n      ...userConfig.missingHandler\n    },\n    flatten: {\n      ...defaultConfig.flatten,\n      ...userConfig.flatten\n    }\n  };\n}\n","import { TranslocoService } from './transloco.service';\nimport { isString } from './helpers';\nimport { take } from 'rxjs/operators';\n\n/*\n * @example\n *\n * given: lazy-page/en => lazy-page\n *\n */\nexport function getScopeFromLang(lang: string): string {\n  if (!lang) {\n    return '';\n  }\n  const split = lang.split('/');\n  split.pop();\n  return split.join('/');\n}\n\n/*\n * @example\n *\n * given: lazy-page/en => en\n *\n */\nexport function getLangFromScope(lang: string): string {\n  if (!lang) {\n    return '';\n  }\n  const split = lang.split('/');\n  return split.pop();\n}\n\n/**\n * @example\n *\n * getPipeValue('todos|scoped', 'scoped') [true, 'todos']\n * getPipeValue('en|static', 'static') [true, 'en']\n * getPipeValue('en', 'static') [false, 'en']\n */\nexport function getPipeValue(str: string, value: string, char = '|'): [boolean, string] {\n  if (isString(str)) {\n    const splitted = str.split(char);\n    const lastItem = splitted.pop();\n    return lastItem === value ? [true, splitted.toString()] : [false, lastItem];\n  }\n\n  return [false, ''];\n}\n\nexport function shouldListenToLangChanges(service: TranslocoService, lang: string) {\n  const [hasStatic] = getPipeValue(lang, 'static');\n  if (hasStatic === false) {\n    // If we didn't get 'lang|static' check if it's set in the global level\n    return service.config.reRenderOnLangChange;\n  }\n\n  // We have 'lang|static' so don't listen to lang changes\n  return false;\n}\n\nexport function listenOrNotOperator(listenToLangChange: boolean) {\n  return listenToLangChange ? source => source : take(1);\n}\n\nexport function prependScope(inlineLoader, scope) {\n  return Object.keys(inlineLoader).reduce((acc, lang) => {\n    acc[`${scope}/${lang}`] = inlineLoader[lang];\n    return acc;\n  }, {});\n}\n","import { TranslocoLoader } from './transloco.loader';\nimport { InlineLoader } from './types';\nimport { isFunction } from './helpers';\n\nexport function resolveLoader(path: string, mainLoader: TranslocoLoader, inlineLoader: InlineLoader) {\n  if(inlineLoader) {\n    const pathLoader = inlineLoader[path];\n    if(isFunction(pathLoader) === false) {\n      throw `You're using an inline loader but didn't provide a loader for ${path}`;\n    }\n\n    return inlineLoader[path]().then(res => res.default);\n  }\n\n  return mainLoader.getTranslation(path);\n}\n","import { from } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { resolveLoader } from './resolve-loader';\nimport { TranslocoLoader } from './transloco.loader';\nimport { InlineLoader } from './types';\n\nexport function getFallbacksLoaders(mainPath: string, fallbackPath: string, mainLoader: TranslocoLoader, inlineLoader: InlineLoader) {\n  return [mainPath, fallbackPath].map(path => {\n    const loader = resolveLoader(path, mainLoader, inlineLoader);\n\n    return from(loader).pipe(\n      map(translation => ({\n        translation,\n        lang: path\n      }))\n    );\n  });\n}\n","import { Inject, Injectable, OnDestroy, Optional } from '@angular/core';\nimport { BehaviorSubject, combineLatest, forkJoin, from, Observable, of, Subject, Subscription } from 'rxjs';\nimport { catchError, map, retry, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { DefaultLoader, TRANSLOCO_LOADER, TranslocoLoader } from './transloco.loader';\nimport { TRANSLOCO_TRANSPILER, TranslocoTranspiler } from './transloco.transpiler';\nimport { AvailableLangs, HashMap, InlineLoader, LoadOptions, SetTranslationOptions, TranslateParams, Translation, TranslocoEvents } from './types';\nimport { flatten, getValue, isString, size, toCamelCase, unflatten } from './helpers';\nimport { defaultConfig, TRANSLOCO_CONFIG, TranslocoConfig } from './transloco.config';\nimport { TRANSLOCO_MISSING_HANDLER, TranslocoMissingHandler } from './transloco-missing-handler';\nimport { TRANSLOCO_INTERCEPTOR, TranslocoInterceptor } from './transloco.interceptor';\nimport { TRANSLOCO_FALLBACK_STRATEGY, TranslocoFallbackStrategy } from './transloco-fallback-strategy';\nimport { mergeConfig } from './merge-config';\nimport { getLangFromScope, getScopeFromLang } from './shared';\nimport { getFallbacksLoaders } from './get-fallbacks-loaders';\nimport { resolveLoader } from './resolve-loader';\n\nlet service: TranslocoService;\n\nexport function translate<T = any>(key: TranslateParams, params: HashMap = {}, lang?: string): T {\n  return service.translate(key, params, lang);\n}\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoService implements OnDestroy {\n  private subscription: Subscription;\n  private translations = new Map<string, Translation>();\n  private cache = new Map<string, Observable<Translation>>();\n  private firstFallbackLang: string | null = null;\n  private defaultLang: string;\n  private mergedConfig: TranslocoConfig;\n  private availableLangs: AvailableLangs = [];\n  private isResolvedMissingOnce = false;\n  private lang: BehaviorSubject<string>;\n  langChanges$: Observable<string>;\n\n  private events = new Subject<TranslocoEvents>();\n  events$ = this.events.asObservable();\n\n  private failedCounter = 0;\n  private failedLangs = new Set<string>();\n\n  constructor(\n    @Optional() @Inject(TRANSLOCO_LOADER) private loader: TranslocoLoader,\n    @Inject(TRANSLOCO_TRANSPILER) private parser: TranslocoTranspiler,\n    @Inject(TRANSLOCO_MISSING_HANDLER) private missingHandler: TranslocoMissingHandler,\n    @Inject(TRANSLOCO_INTERCEPTOR) private interceptor: TranslocoInterceptor,\n    @Inject(TRANSLOCO_CONFIG) private userConfig: TranslocoConfig,\n    @Inject(TRANSLOCO_FALLBACK_STRATEGY) private fallbackStrategy: TranslocoFallbackStrategy\n  ) {\n    if(!this.loader) {\n      this.loader = new DefaultLoader(this.translations);\n    }\n    service = this;\n    this.mergedConfig = mergeConfig(defaultConfig, userConfig);\n\n    this.setAvailableLangs(this.mergedConfig.availableLangs);\n    this.setFallbackLangForMissingTranslation(this.mergedConfig);\n    this.setDefaultLang(this.mergedConfig.defaultLang);\n    this.lang = new BehaviorSubject<string>(this.getDefaultLang());\n    // Don't use distinctUntilChanged as we need the ability to update\n    // the value when using setTranslation or setTranslationKeys\n    this.langChanges$ = this.lang.asObservable();\n\n    /**\n     * When we have a failure, we want to define the next language that succeeded as the active\n     */\n    this.subscription = this.events$.subscribe(e => {\n      if(e.type === 'translationLoadSuccess' && e.wasFailure) {\n        // Handle scoped lang\n        const lang = getLangFromScope(e.payload.lang);\n        this.setActiveLang(lang);\n      }\n    });\n  }\n\n  get config(): TranslocoConfig {\n    return this.mergedConfig;\n  }\n\n  getDefaultLang() {\n    return this.defaultLang;\n  }\n\n  setDefaultLang(lang: string) {\n    this.defaultLang = lang;\n  }\n\n  getActiveLang() {\n    return this.lang.getValue();\n  }\n\n  setActiveLang(lang: string) {\n    this.lang.next(lang);\n    return this;\n  }\n\n  setAvailableLangs(langs: AvailableLangs) {\n    this.availableLangs = langs;\n  }\n\n  getAvailableLangs() {\n    return this.availableLangs;\n  }\n\n  load(path: string, options: LoadOptions = {}): Observable<Translation> {\n    if(this.cache.has(path) === false) {\n      let loadTranslation: Observable<Translation | { translation: Translation; lang: string }[]>;\n\n      if(this.useFallbackTranslation(path)) {\n        // if the path is scope the fallback should be `scope/fallbackLang`;\n        const fallback = this._isLangScoped(path)\n          ? `${getScopeFromLang(path)}/${this.firstFallbackLang}`\n          : this.firstFallbackLang;\n\n        const loaders = getFallbacksLoaders(path, fallback, this.loader, options.inlineLoader);\n        loadTranslation = forkJoin(loaders);\n      } else {\n        const loader = resolveLoader(path, this.loader, options.inlineLoader);\n        loadTranslation = from(loader);\n      }\n\n      const load$ = loadTranslation.pipe(\n        retry(this.config.failedRetries),\n        catchError(() => this.handleFailure(path, options)),\n        tap(translation => {\n          if(Array.isArray(translation)) {\n            translation.forEach(t => {\n              this.handleSuccess(t.lang, t.translation);\n              // Save the fallback in cache so we'll not create a redundant request\n              if(t.lang !== path) {\n                this.cache.set(t.lang, of({}));\n              }\n            });\n            return;\n          }\n          this.handleSuccess(path, translation);\n        }),\n        shareReplay(1)\n      );\n\n      this.cache.set(path, load$);\n    }\n\n    return this.cache.get(path);\n  }\n\n  /**\n   * Gets the instant translated value of a key\n   *\n   * @example\n   *\n   * translate<string>('hello')\n   * translate('hello', { value: 'value' })\n   * translate<string[]>(['hello', 'key'])\n   * translate('hello', { }, 'en')\n   * translate('scope.someKey', { }, 'en')\n   */\n  translate<T = any>(key: TranslateParams, params: HashMap = {}, lang = this.getActiveLang()): T {\n    let resolveLang = lang;\n    let scope;\n\n    // If lang is scope we need to check the following cases:\n    // todos/es => in this case we should take `es` as lang\n    // todos => in this case we should set the active lang as lang\n    if(this._isLangScoped(lang)) {\n      // en for example\n      const langFromScope = getLangFromScope(lang);\n      // en is lang\n      const hasLang = this._isLang(langFromScope);\n      // take en\n      resolveLang = hasLang ? langFromScope : this.getActiveLang();\n      // find the scope\n      scope = this.getMappedScope(hasLang ? getScopeFromLang(lang) : lang);\n    }\n\n    if(Array.isArray(key)) {\n      return key.map(k => this.translate(scope ? `${scope}.${k}` : k, params, resolveLang)) as any;\n    }\n\n    key = scope ? `${scope}.${key}` : key;\n\n    if(!key) {\n      return this.missingHandler.handle(key, this.config);\n    }\n\n    const translation = this.getTranslation(resolveLang);\n    const value = translation[key];\n\n    if(!value) {\n      return this.handleMissingKey(key, value, params);\n    }\n\n    return this.parser.transpile(value, params, translation);\n  }\n\n  /**\n   * Gets the translated value of a key as observable\n   *\n   * @example\n   *\n   * selectTranslate<string>('hello').subscribe(value => ...)\n   * selectTranslate<string>('hello', {}, 'es').subscribe(value => ...)\n   * selectTranslate<string>('hello', {}, 'todos').subscribe(value => ...)\n   *\n   */\n  selectTranslate<T = any>(key: TranslateParams, params?: HashMap, lang?: string, _isObject = false): Observable<T> {\n    const load = lang =>\n      this.load(lang).pipe(\n        map(() => (_isObject ? this.translateObject(key, params, lang) : this.translate(key, params, lang)))\n      );\n    if(isString(lang)) {\n      const langOrScope = this._completeScopeWithLang(lang);\n      return load(langOrScope);\n    } else {\n      // if the user doesn't pass lang, we need to listen to lang changes and update the value accordingly\n      return this.langChanges$.pipe(switchMap(lang => load(lang)));\n    }\n  }\n\n  /**\n   * Translate the given path that returns an object\n   *\n   * @example\n   *\n   * service.translateObject('path.to.object', {'subpath': { value: 'someValue'}}) => returns translated object\n   *\n   */\n  translateObject<T = any>(key: TranslateParams, params?: HashMap, lang = this.getActiveLang()): T {\n    if(Array.isArray(key)) {\n      return key.map(k => this.translateObject(k, params, lang)) as any;\n    }\n\n    const translation = this.getTranslation(lang);\n    // TODO: optimize it (we can build this specific object)\n    const value = getValue(unflatten(translation), key);\n    return this.parser.transpile(value, params, translation);\n  }\n\n  selectTranslateObject<T = any>(key: TranslateParams, params?: HashMap, lang?: string): Observable<T> {\n    return this.selectTranslate(key, params, lang, true);\n  }\n\n  /**\n   * Gets an object of translations for a given language\n   *\n   * @example\n   *\n   * getTranslation()\n   * getTranslation('en')\n   * getTranslation('admin-page/en')\n   */\n  getTranslation(): Map<string, Translation>;\n  getTranslation(lang: string): Translation;\n  getTranslation(lang?: string): Map<string, Translation> | Translation {\n    return lang ? this.translations.get(lang) || {} : this.translations;\n  }\n\n  /**\n   * Gets an object of translations for a given language\n   *\n   * @example\n   *\n   * selectTranslation().subscribe()\n   * selectTranslation('es').subscribe()\n   */\n  selectTranslation(lang?: string): Observable<Translation> {\n    const language = lang || this.getActiveLang();\n    return this.load(language).pipe(map(() => this.getTranslation(language)));\n  }\n\n  /**\n   * Sets or merge a given translation object to current lang\n   *\n   * @example\n   *\n   * setTranslation({ ... })\n   * setTranslation({ ... }, 'en')\n   * setTranslation({ ... }, 'es', { merge: false } )\n   * setTranslation({ ... }, 'todos/en', { merge: false } )\n   */\n  setTranslation(translation: Translation, lang = this.getActiveLang(), options: SetTranslationOptions = {}) {\n    const defaults = { merge: true, emitChange: true };\n    const mergedOptions = { ...defaults, ...options };\n    const scope = getScopeFromLang(lang);\n\n    /**\n     * If this isn't a scope we use the whole translation as is\n     * otherwise we need to flat the scope and use it\n     */\n    let flattenScopeOrTranslation = translation;\n\n    // Merged the scoped language into the active language\n    if(scope) {\n      const key = this.getMappedScope(scope);\n      flattenScopeOrTranslation = flatten({ [key]: translation });\n    }\n\n    const currentLang = scope ? getLangFromScope(lang) : lang;\n\n    const mergedTranslation = {\n      ...(mergedOptions.merge && this.getTranslation(currentLang)),\n      ...flattenScopeOrTranslation\n    };\n\n    const withHook = this.interceptor.preSaveTranslation(mergedTranslation, currentLang);\n    const flattenTranslation = this.mergedConfig.flatten.aot ? withHook : flatten(withHook);\n\n    this.translations.set(currentLang, flattenTranslation);\n    mergedOptions.emitChange && this.setActiveLang(this.getActiveLang());\n  }\n\n  /**\n   * Sets translation key with given value\n   *\n   * @example\n   *\n   * setTranslationKey('key', 'value')\n   * setTranslationKey('key.nested', 'value')\n   * setTranslationKey('key.nested', 'value', 'en')\n   */\n  setTranslationKey(key: string, value: string, lang = this.getActiveLang()) {\n    const withHook = this.interceptor.preSaveTranslationKey(key, value, lang);\n    const newValue = {\n      ...this.getTranslation(lang),\n      [key]: withHook\n    };\n    this.setTranslation(newValue, lang);\n  }\n\n  handleMissingKey(key: string, value: any, params?: HashMap) {\n    if(this.config.missingHandler.allowEmpty && value === '') {\n      return '';\n    }\n\n    if(this.useFallbackTranslation() && !this.isResolvedMissingOnce) {\n      this.isResolvedMissingOnce = true;\n      const value = this.translate(key, params, this.firstFallbackLang);\n      this.isResolvedMissingOnce = false;\n      return value;\n    }\n\n    return this.missingHandler.handle(key, this.config);\n  }\n\n  /**\n   * @internal\n   */\n  _isLangScoped(lang: string) {\n    return this.getAvailableLangsIds().indexOf(lang) === -1;\n  }\n\n  /**\n   * @internal\n   */\n  _isLang(lang: string) {\n    return this.getAvailableLangsIds().indexOf(lang) !== -1;\n  }\n\n  /**\n   * @internal\n   *\n   * We always want to make sure the global lang is loaded\n   * before loading the scope since you can access both via the pipe/directive.\n   */\n  _loadDependencies(path: string, inlineLoader?: InlineLoader): Observable<Translation | Translation[]> {\n    const mainLang = getLangFromScope(path);\n\n    if(this._isLangScoped(path) && !this.isLoadedTranslation(mainLang)) {\n      return combineLatest(this.load(mainLang), this.load(path, { inlineLoader }));\n    }\n\n    return this.load(path, { inlineLoader });\n  }\n\n  private isLoadedTranslation(lang: string) {\n    return size(this.getTranslation(lang));\n  }\n\n  /**\n   * @internal\n   */\n  _completeScopeWithLang(langOrScope: string) {\n    if(this._isLangScoped(langOrScope) && !this._isLang(getLangFromScope(langOrScope))) {\n      return `${langOrScope}/${this.getActiveLang()}`;\n    }\n    return langOrScope;\n  }\n\n  /**\n   * @internal\n   */\n  _setScopeAlias(scope: string, alias: string) {\n    if(!this.mergedConfig.scopeMapping) {\n      this.mergedConfig.scopeMapping = {};\n    }\n    this.mergedConfig.scopeMapping[scope] = alias;\n  }\n\n  private getAvailableLangsIds(): string[] {\n    const first = this.getAvailableLangs()[0];\n\n    if(isString(first)) {\n      return this.getAvailableLangs() as string[];\n    }\n\n    return (this.getAvailableLangs() as { id: string }[]).map(l => l.id);\n  }\n\n  private useFallbackTranslation(lang?: string) {\n    return this.config.missingHandler.useFallbackTranslation && lang !== this.firstFallbackLang;\n  }\n\n  private handleSuccess(lang: string, translation: Translation) {\n    this.setTranslation(translation, lang, { emitChange: false });\n    if(this.failedLangs.has(lang) === false) {\n      this.events.next({\n        wasFailure: !!this.failedLangs.size,\n        type: 'translationLoadSuccess',\n        payload: {\n          lang\n        }\n      });\n\n      this.failedCounter = 0;\n    } else {\n      this.cache.delete(lang);\n      this.failedLangs.delete(lang);\n    }\n  }\n\n  private handleFailure(lang: string, mergedOptions) {\n    const splitted = lang.split('/');\n\n    this.failedLangs.add(lang);\n    const fallbacks = mergedOptions.fallbackLangs || this.fallbackStrategy.getNextLangs(lang);\n    const nextLang = fallbacks[this.failedCounter];\n\n    const isFallbackLang = nextLang === splitted[splitted.length - 1];\n\n    if(!nextLang || isFallbackLang) {\n      let msg = `Unable to load translation and all the fallback languages`;\n      if(splitted.length > 1) {\n        msg += `, did you misspelled the scope name?`;\n      }\n\n      throw new Error(msg);\n    }\n\n    let resolveLang = nextLang;\n    // if it's scoped lang\n    if(splitted.length > 1) {\n      // We need to resolve it to:\n      // todos/langNotExists => todos/nextLang\n      splitted[splitted.length - 1] = nextLang;\n      resolveLang = splitted.join('/');\n    }\n\n    this.failedCounter++;\n    this.events.next({\n      type: 'translationLoadFailure',\n      payload: {\n        lang\n      }\n    });\n\n    return this.load(resolveLang);\n  }\n\n  private setFallbackLangForMissingTranslation({ fallbackLang }: TranslocoConfig): void {\n    if(this.useFallbackTranslation && fallbackLang) {\n      this.firstFallbackLang = Array.isArray(fallbackLang) ? fallbackLang[0] : fallbackLang;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  private getMappedScope(scope: string): string {\n    const { scopeMapping = {} } = this.config;\n    return scopeMapping[scope] || toCamelCase(scope);\n  }\n}\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  template: `\r\n    <div class=\"transloco-loader-template\" [innerHTML]=\"html\"></div>\r\n  `\r\n})\r\nexport class TranslocoLoaderComponent {\r\n  @Input() html: string;\r\n}\r\n","import { ComponentRef, TemplateRef, ViewContainerRef, ComponentFactoryResolver, Injector, Type } from '@angular/core';\r\nimport { isString } from './helpers';\r\nimport { TranslocoLoaderComponent } from './loader-component.component';\r\n\r\nexport type View = string | TemplateRef<any> | Type<any>;\r\n\r\nexport class TemplateHandler {\r\n  private injector: Injector;\r\n\r\n  constructor(private view: View, private vcr: ViewContainerRef) {\r\n    this.injector = this.vcr.injector;\r\n  }\r\n\r\n  attachView() {\r\n    if (this.view instanceof TemplateRef) {\r\n      this.vcr.createEmbeddedView(this.view);\r\n    } else if (isString(this.view)) {\r\n      const componentRef = this.createComponent<TranslocoLoaderComponent>(TranslocoLoaderComponent);\r\n      componentRef.instance.html = this.view;\r\n      componentRef.hostView.detectChanges();\r\n    } else {\r\n      this.createComponent(this.view);\r\n    }\r\n  }\r\n\r\n  detachView() {\r\n    this.vcr.clear();\r\n  }\r\n\r\n  private createComponent<T>(cmp: Type<any>): ComponentRef<T> {\r\n    const cfr = this.injector.get(ComponentFactoryResolver);\r\n    const factory = cfr.resolveComponentFactory(cmp);\r\n\r\n    return this.vcr.createComponent(factory);\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\n\nexport const TRANSLOCO_LANG = new InjectionToken<string>('TRANSLOCO_LANG');\n","import { InjectionToken, ComponentRef } from '@angular/core';\n\nexport const TRANSLOCO_LOADING_TEMPLATE = new InjectionToken<{ component: ComponentRef<any> | string }>(\n  'TRANSLOCO_LOADING_TEMPLATE'\n);\n","import { InjectionToken } from '@angular/core';\nimport { TranslocoScope } from './types';\n\nexport const TRANSLOCO_SCOPE = new InjectionToken<TranslocoScope>('TRANSLOCO_SCOPE');\n","import { getLangFromScope, getPipeValue, getScopeFromLang } from './shared';\n\ntype LangResolverParams = {\n  inline: string | undefined;\n  provider: string | undefined;\n  active: string | undefined;\n};\n\nexport class LangResolver {\n  initialized = false;\n\n  // inline => provider => active\n  resolve(\n    { inline, provider, active }: LangResolverParams = { inline: undefined, provider: undefined, active: undefined }\n  ) {\n    let lang = active;\n    /**\n     * When the user changes the lang we need to update\n     * the view. Otherwise, the lang will remain the inline/provided lang\n     */\n    if (this.initialized) {\n      lang = active;\n      return lang;\n    }\n\n    if (provider) {\n      const [_, extracted] = getPipeValue(provider, 'static');\n      lang = extracted;\n    }\n\n    if (inline) {\n      const [_, extracted] = getPipeValue(inline, 'static');\n      lang = extracted;\n    }\n\n    this.initialized = true;\n    return lang;\n  }\n\n  /**\n   *\n   * Resolve the lang\n   *\n   * @example\n   *\n   * resolveLangBasedOnScope('todos/en') => en\n   * resolveLangBasedOnScope('en') => en\n   *\n   */\n  resolveLangBasedOnScope(lang: string) {\n    const scope = getScopeFromLang(lang);\n    return scope ? getLangFromScope(lang) : lang;\n  }\n\n  /**\n   *\n   * Resolve the lang path for loading\n   *\n   * @example\n   *\n   * resolveLangPath('todos', 'en') => todos/en\n   * resolveLangPath('en') => en\n   *\n   */\n  resolveLangPath(lang: string, scope: string | undefined) {\n    return scope ? `${scope}/${lang}` : lang;\n  }\n}\n","import { TranslocoScope, ProviderScope } from './types';\nimport { TranslocoService } from './transloco.service';\nimport { isScopeObject, toCamelCase } from './helpers';\n\ntype ScopeResolverParams = {\n  inline: string | undefined;\n  provider: TranslocoScope;\n};\n\nexport class ScopeResolver {\n  constructor(private translocoService: TranslocoService) {}\n\n  // inline => provider\n  resolve({ inline, provider }: ScopeResolverParams = { inline: undefined, provider: undefined }): string {\n    if (inline) {\n      return inline;\n    }\n\n    if (provider) {\n      if (isScopeObject(provider)) {\n        const { scope, alias = toCamelCase(scope) } = provider as ProviderScope;\n        this.translocoService._setScopeAlias(scope, alias);\n        return scope;\n      }\n\n      return provider as string;\n    }\n\n    return undefined;\n  }\n}\n","import { ChangeDetectorRef, Directive, ElementRef, EmbeddedViewRef, Inject, Input, OnChanges, OnDestroy, OnInit, Optional, TemplateRef, Type, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { TemplateHandler, View } from './template-handler';\nimport { TRANSLOCO_LANG } from './transloco-lang';\nimport { TRANSLOCO_LOADING_TEMPLATE } from './transloco-loading-template';\nimport { TRANSLOCO_SCOPE } from './transloco-scope';\nimport { TranslocoService } from './transloco.service';\nimport { HashMap, InlineLoader, TranslocoScope } from './types';\nimport { listenOrNotOperator, prependScope, shouldListenToLangChanges } from './shared';\nimport { LangResolver } from './lang-resolver';\nimport { ScopeResolver } from './scope-resolver';\nimport { hasInlineLoader } from './helpers';\n\n@Directive({\n  selector: '[transloco]'\n})\nexport class TranslocoDirective implements OnInit, OnDestroy, OnChanges {\n  subscription: Subscription | null;\n  view: EmbeddedViewRef<any>;\n  private translationMemo: { [key: string]: { value: any; params: HashMap } } = {};\n\n  @Input('transloco') key: string;\n  @Input('translocoParams') params: HashMap = {};\n  @Input('translocoScope') inlineScope: string | undefined;\n  @Input('translocoRead') inlineRead: string | undefined;\n  @Input('translocoLang') inlineLang: string | undefined;\n  @Input('translocoLoadingTpl') inlineTpl: TemplateRef<any> | undefined;\n\n  private currentLang: string;\n  private loaderTplHandler: TemplateHandler = null;\n  // Whether we already rendered the view once\n  private initialized = false;\n  private path: string;\n  private langResolver = new LangResolver();\n  private scopeResolver = new ScopeResolver(this.translocoService);\n\n  constructor(\n    private translocoService: TranslocoService,\n    @Optional() private tpl: TemplateRef<{ $implicit: (key: string, params?: HashMap) => any }>,\n    @Optional() @Inject(TRANSLOCO_SCOPE) private providerScope: TranslocoScope,\n    @Optional() @Inject(TRANSLOCO_LANG) private providerLang: string | null,\n    @Optional() @Inject(TRANSLOCO_LOADING_TEMPLATE) private providedLoadingTpl: Type<any> | string,\n    private vcr: ViewContainerRef,\n    private cdr: ChangeDetectorRef,\n    private host: ElementRef\n  ) {\n  }\n\n  ngOnInit() {\n    const loadingTpl = this.getLoadingTpl();\n    if(loadingTpl) {\n      this.loaderTplHandler = new TemplateHandler(loadingTpl, this.vcr);\n      this.loaderTplHandler.attachView();\n    }\n\n    const listenToLangChange = shouldListenToLangChanges(this.translocoService, this.providerLang || this.inlineLang);\n\n    this.subscription = this.translocoService.langChanges$\n      .pipe(\n        switchMap(activeLang => {\n          const lang = this.langResolver.resolve({\n            inline: this.inlineLang,\n            provider: this.providerLang,\n            active: activeLang\n          });\n          const scope = this.scopeResolver.resolve({\n            inline: this.inlineScope,\n            provider: this.providerScope\n          });\n\n          this.path = this.langResolver.resolveLangPath(lang, scope);\n          const inlineLoader: InlineLoader | null = hasInlineLoader(this.providerScope) ? prependScope(this.providerScope.loader, scope) : null;\n\n          return this.translocoService._loadDependencies(this.path, inlineLoader);\n        }),\n        listenOrNotOperator(listenToLangChange)\n      )\n      .subscribe(() => {\n        this.currentLang = this.langResolver.resolveLangBasedOnScope(this.path);\n        this.tpl === null ? this.simpleStrategy() : this.structuralStrategy(this.currentLang, this.inlineRead);\n        this.cdr.markForCheck();\n        this.initialized = true;\n      });\n  }\n\n  ngOnChanges(changes) {\n    // We need to support dynamic keys/params, so if this is not the first change CD cycle\n    // we need to run the function again in order to update the value\n    const notInit = Object.keys(changes).some(v => changes[v].firstChange === false);\n    notInit && this.simpleStrategy();\n  }\n\n  private simpleStrategy() {\n    this.detachLoader();\n    this.host.nativeElement.innerText = this.translocoService.translate(this.key, this.params, this.currentLang);\n  }\n\n  private structuralStrategy(lang: string, read: string | undefined) {\n    this.translationMemo = {};\n\n    if(this.view) {\n      // when the lang changes we need to change the reference so Angular will update the view\n      this.view.context['$implicit'] = this.getTranslateFn(lang, read);\n    } else {\n      this.detachLoader();\n      this.view = this.vcr.createEmbeddedView(this.tpl, {\n        $implicit: this.getTranslateFn(lang, read)\n      });\n    }\n  }\n\n  private getTranslateFn(lang: string, read: string | undefined): (key: string, params?: HashMap) => any {\n    return (key: string, params: HashMap) => {\n      const withRead = read ? `${read}.${key}` : key;\n      const withParams = params ? `${withRead}${JSON.stringify(params)}` : withRead;\n      if(this.translationMemo.hasOwnProperty(withParams)) {\n        return this.translationMemo[withParams].value;\n      }\n      this.translationMemo[withParams] = {\n        params,\n        value: this.translocoService.translate(withRead, params, lang)\n      };\n\n      return this.translationMemo[withParams].value;\n    };\n  }\n\n  private getLoadingTpl(): View {\n    return this.inlineTpl || this.providedLoadingTpl;\n  }\n\n  ngOnDestroy() {\n    this.subscription && this.subscription.unsubscribe();\n  }\n\n  private detachLoader() {\n    this.loaderTplHandler && this.loaderTplHandler.detachView();\n  }\n}\n","import { ChangeDetectorRef, Inject, OnDestroy, Optional, Pipe, PipeTransform } from '@angular/core';\nimport { TranslocoService } from './transloco.service';\nimport { HashMap, InlineLoader, ProviderScope } from './types';\nimport { switchMap } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { TRANSLOCO_SCOPE } from './transloco-scope';\nimport { TRANSLOCO_LANG } from './transloco-lang';\nimport { listenOrNotOperator, prependScope, shouldListenToLangChanges } from './shared';\nimport { LangResolver } from './lang-resolver';\nimport { ScopeResolver } from './scope-resolver';\nimport { hasInlineLoader } from './helpers';\n\n@Pipe({\n  name: 'transloco',\n  pure: false\n})\nexport class TranslocoPipe implements PipeTransform, OnDestroy {\n  private subscription: Subscription | null = null;\n  private lastValue: string | undefined;\n  private lastKey: string | undefined;\n  private listenToLangChange: boolean;\n  private path: string;\n  private langResolver = new LangResolver();\n  private scopeResolver = new ScopeResolver(this.translocoService);\n\n  constructor(\n    private translocoService: TranslocoService,\n    @Optional() @Inject(TRANSLOCO_SCOPE) private providerScope: string | ProviderScope | null,\n    @Optional() @Inject(TRANSLOCO_LANG) private providerLang: string | null,\n    private cdr: ChangeDetectorRef\n  ) {\n    this.listenToLangChange = shouldListenToLangChanges(this.translocoService, this.providerLang);\n  }\n\n  transform(key: string, params?: HashMap | undefined, inlineLang?: string | undefined): string {\n    if (!key) {\n      return key;\n    }\n\n    const keyName = params ? `${key}${JSON.stringify(params)}` : key;\n\n    if (keyName === this.lastKey) {\n      return this.lastValue;\n    }\n\n    this.lastKey = keyName;\n    this.subscription && this.subscription.unsubscribe();\n\n    this.subscription = this.translocoService.langChanges$\n      .pipe(\n        switchMap(activeLang => {\n          const lang = this.langResolver.resolve({\n            inline: inlineLang,\n            provider: this.providerLang,\n            active: activeLang\n          });\n\n          let scope = this.scopeResolver.resolve({ inline: undefined, provider: this.providerScope });\n          this.path = this.langResolver.resolveLangPath(lang, scope);\n\n          const inlineLoader: InlineLoader | null = hasInlineLoader(this.providerScope) ? prependScope(this.providerScope.loader, scope) : null;\n\n          return this.translocoService._loadDependencies(this.path, inlineLoader);\n        }),\n        listenOrNotOperator(this.listenToLangChange)\n      )\n      .subscribe(() => this.updateValue(key, params));\n\n    return this.lastValue;\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  private updateValue(key: string, params?: HashMap | undefined) {\n    const lang = this.langResolver.resolveLangBasedOnScope(this.path);\n    this.lastValue = this.translocoService.translate(key, params, lang);\n    this.cdr.markForCheck();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TranslocoLoaderComponent } from './loader-component.component';\nimport { TranslocoDirective } from './transloco.directive';\nimport { DefaultTranspiler, TRANSLOCO_TRANSPILER } from './transloco.transpiler';\nimport { TranslocoPipe } from './transloco.pipe';\nimport { DefaultHandler, TRANSLOCO_MISSING_HANDLER } from './transloco-missing-handler';\nimport { DefaultInterceptor, TRANSLOCO_INTERCEPTOR } from './transloco.interceptor';\nimport { DefaultFallbackStrategy, TRANSLOCO_FALLBACK_STRATEGY } from './transloco-fallback-strategy';\nimport { TRANSLOCO_CONFIG } from './transloco.config';\n\nexport const defaultProviders = [\n  {\n    provide: TRANSLOCO_TRANSPILER,\n    useClass: DefaultTranspiler\n  },\n  {\n    provide: TRANSLOCO_MISSING_HANDLER,\n    useClass: DefaultHandler\n  },\n  {\n    provide: TRANSLOCO_INTERCEPTOR,\n    useClass: DefaultInterceptor\n  },\n  {\n    provide: TRANSLOCO_FALLBACK_STRATEGY,\n    useClass: DefaultFallbackStrategy,\n    deps: [TRANSLOCO_CONFIG]\n  }\n];\n\n@NgModule({\n  declarations: [TranslocoDirective, TranslocoPipe, TranslocoLoaderComponent],\n  providers: [defaultProviders],\n  exports: [TranslocoDirective, TranslocoPipe],\n  entryComponents: [TranslocoLoaderComponent]\n})\nexport class TranslocoModule {}\n","import { Inject, ModuleWithProviders, NgModule } from '@angular/core';\nimport { TRANSLOCO_LOADER, TranslocoLoader } from './transloco.loader';\nimport { HashMap, Translation } from './types';\nimport { Observable, of } from 'rxjs';\nimport { defaultProviders, TranslocoModule } from './transloco.module';\nimport { TRANSLOCO_CONFIG, TranslocoConfig } from './transloco.config';\n\nexport class TestingLoader implements TranslocoLoader {\n  constructor(@Inject('translocoLangs') private langs: HashMap<Translation>) {}\n\n  getTranslation(lang: string): Observable<Translation> | Promise<Translation> {\n    return of(this.langs[lang]);\n  }\n}\n\n@NgModule({\n  exports: [TranslocoModule]\n})\nexport class TranslocoTestingModule {\n  static withLangs(langs: HashMap<Translation>, config: Partial<TranslocoConfig> = {}): ModuleWithProviders {\n    return {\n      ngModule: TranslocoTestingModule,\n      providers: [\n        {\n          provide: 'translocoLangs',\n          useValue: langs\n        },\n        {\n          provide: TRANSLOCO_LOADER,\n          useClass: TestingLoader\n        },\n        defaultProviders,\n        {\n          provide: TRANSLOCO_CONFIG,\n          useValue: { prodMode: true, ...config }\n        }\n      ]\n    };\n  }\n}\n","import { isBrowser } from './helpers';\n\n/**\n * Returns the language code name from the browser, e.g. \"en\"\n */\nexport function getBrowserLang(): string | undefined {\n  if (isBrowser() === false) {\n    return undefined;\n  }\n\n  let browserLang = getBrowserCultureLang();\n  if (browserLang.indexOf('-') !== -1) {\n    browserLang = browserLang.split('-')[0];\n  }\n\n  if (browserLang.indexOf('_') !== -1) {\n    browserLang = browserLang.split('_')[0];\n  }\n\n  return browserLang;\n}\n\n/**\n * Returns the culture language code name from the browser, e.g. \"en-US\"\n */\nexport function getBrowserCultureLang(): string {\n  if (isBrowser() === false) {\n    return undefined;\n  }\n\n  const navigator = window.navigator as any;\n  let browserCultureLang = navigator.languages ? navigator.languages[0] : null;\n  browserCultureLang = browserCultureLang || navigator.language || navigator.browserLanguage || navigator.userLanguage;\n\n  return browserCultureLang;\n}\n"],"names":[],"mappings":"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"}
