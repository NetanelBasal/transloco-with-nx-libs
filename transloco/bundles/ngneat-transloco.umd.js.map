{"version":3,"file":"ngneat-transloco.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@ngneat/transloco/lib/transloco.loader.ts","ng://@ngneat/transloco/lib/helpers.ts","ng://@ngneat/transloco/lib/transloco.transpiler.ts","ng://@ngneat/transloco/lib/transloco.config.ts","ng://@ngneat/transloco/lib/transloco-missing-handler.ts","ng://@ngneat/transloco/lib/transloco.interceptor.ts","ng://@ngneat/transloco/lib/transloco-fallback-strategy.ts","ng://@ngneat/transloco/lib/merge-config.ts","ng://@ngneat/transloco/lib/shared.ts","ng://@ngneat/transloco/lib/resolve-loader.ts","ng://@ngneat/transloco/lib/get-fallbacks-loaders.ts","ng://@ngneat/transloco/lib/transloco.service.ts","ng://@ngneat/transloco/lib/loader-component.component.ts","ng://@ngneat/transloco/lib/template-handler.ts","ng://@ngneat/transloco/lib/transloco-lang.ts","ng://@ngneat/transloco/lib/transloco-loading-template.ts","ng://@ngneat/transloco/lib/transloco-scope.ts","ng://@ngneat/transloco/lib/lang-resolver.ts","ng://@ngneat/transloco/lib/scope-resolver.ts","ng://@ngneat/transloco/lib/transloco.directive.ts","ng://@ngneat/transloco/lib/transloco.pipe.ts","ng://@ngneat/transloco/lib/transloco.module.ts","ng://@ngneat/transloco/lib/transloco-testing.module.ts","ng://@ngneat/transloco/lib/browser-lang.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { InjectionToken } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Translation } from './types';\n\nexport interface TranslocoLoader {\n  getTranslation(lang: string): Observable<Translation> | Promise<Translation>;\n}\n\nexport class DefaultLoader implements TranslocoLoader {\n  constructor(private translations: Map<string, Translation>) {}\n\n  getTranslation(lang: string): Observable<Translation> {\n    return of(this.translations.get(lang) || {});\n  }\n}\n\nexport const TRANSLOCO_LOADER = new InjectionToken<Translation>('TRANSLOCO_LOADER');\n","import { ProviderScope, Translation } from './types';\nimport flat from 'flat';\n\nexport function getValue(obj: object, path: string) {\n  /* For cases where the key is like: 'general.something.thing' */\n  if(obj && obj.hasOwnProperty(path)) {\n    return obj[path];\n  }\n  return path.split('.').reduce((p, c) => p && p[c], obj);\n}\n\nexport function setValue(obj: any, prop: string, val: any) {\n  obj = { ...obj };\n\n  const split = prop.split('.');\n  const lastIndex = split.length - 1;\n\n  split.reduce((acc, part, index) => {\n    if(index === lastIndex) {\n      acc[part] = val;\n    } else {\n      acc[part] = Array.isArray(acc[part]) ? acc[part].slice() : { ...acc[part] };\n    }\n\n    return acc && acc[part];\n  }, obj);\n\n  return obj;\n}\n\nexport function size(collection) {\n  if(!collection) {\n    return 0;\n  }\n\n  if(Array.isArray(collection)) {\n    return collection.length;\n  }\n\n  if(isObject(collection)) {\n    return Object.keys(collection).length;\n  }\n\n  return !!collection ? collection.length : 0;\n}\n\nexport function isEmpty(collection) {\n  return size(collection) === 0;\n}\n\nexport function isFunction(val: any): val is Function {\n  return typeof val === 'function';\n}\n\nexport function isString(val: any): val is string {\n  return typeof val === 'string';\n}\n\nexport function isNumber(val: any): val is number {\n  return typeof val === 'number';\n}\n\nexport function isObject(item): boolean {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\nexport function coerceArray(val) {\n  return Array.isArray(val) ? val : [val];\n}\n\n/*\n * @example\n *\n * given: path-to-happiness => pathToHappiness\n * given: path_to_happiness => pathToHappiness\n * given: path-to_happiness => pathToHappiness\n *\n */\nexport function toCamelCase(str: string): string {\n  return str\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) => (index == 0 ? word.toLowerCase() : word.toUpperCase()))\n    .replace(/\\s+|_|-|\\//g, '');\n}\n\nexport function isBrowser() {\n  return typeof window !== 'undefined';\n}\n\nexport function isNil(value: any) {\n  return value === null || value === undefined;\n}\n\nexport function isDefined(value: any) {\n  return isNil(value) === false;\n}\n\nexport function toNumber(value: number | string): number | null {\n  if(isNumber(value)) return value;\n\n  if(isString(value) && !isNaN(Number(value) - parseFloat(value))) {\n    return Number(value);\n  }\n\n  return null;\n}\n\nexport function isScopeObject(item: any): item is ProviderScope {\n  return item && typeof item.scope === 'string';\n}\n\nexport function hasInlineLoader(item: any): item is ProviderScope {\n  return item && isObject(item.loader);\n}\n\nexport function unflatten(obj: Translation): Translation {\n  return flat.unflatten(obj, { safe: true });\n}\n\nexport function flatten(obj: Translation): Translation {\n  return flat(obj, { safe: true });\n}\n","import { InjectionToken } from '@angular/core';\nimport { HashMap, Translation } from './types';\nimport { getValue, isString, isObject, setValue, isDefined } from './helpers';\n\nexport const TRANSLOCO_TRANSPILER = new InjectionToken('TRANSLOCO_TRANSPILER');\n\nexport interface TranslocoTranspiler {\n  transpile(value: any, params: HashMap<any>, translation: HashMap): any;\n}\n\nexport class DefaultTranspiler implements TranslocoTranspiler {\n  transpile(value: any, params: HashMap<any> = {}, translation: Translation): any {\n    if (isString(value)) {\n      return value.replace(/{{(.*?)}}/g, function(_, match) {\n        match = match.trim();\n        if (isDefined(params[match])) {\n          return params[match];\n        }\n\n        return isDefined(translation[match]) ? translation[match] : '';\n      });\n    }\n\n    if (isObject(value) && params) {\n      /**\n       *\n       * @example\n       *\n       * const en = {\n       *  a: {\n       *    b: {\n       *      c: \"Hello {{ value }}\"\n       *    }\n       *  }\n       * }\n       *\n       * const params =  {\n       *  \"b.c\": { value: \"Transloco \"}\n       * }\n       *\n       * service.selectTranslate('a', params);\n       *\n       * // the first param will be the result of `en.a`.\n       * // the second param will be `params`.\n       * parser.transpile(value, params, {});\n       *\n       *\n       */\n      Object.keys(params).forEach(p => {\n        // get the value of \"b.c\" inside \"a\" => \"Hello {{ value }}\"\n        const v = getValue(value, p);\n        // get the params of \"b.c\" => { value: \"Transloco\" }\n        const getParams = getValue(params, p);\n\n        // transpile the value => \"Hello Transloco\"\n        const transpiled = this.transpile(v, getParams, translation);\n\n        // set \"b.c\" to `transpiled`\n        value = setValue(value, p, transpiled);\n      });\n    }\n\n    return value;\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { AvailableLangs, HashMap } from './types';\n\nexport type TranslocoConfig = {\n  defaultLang: string;\n  reRenderOnLangChange?: boolean;\n  prodMode?: boolean;\n  fallbackLang?: string | string[];\n  failedRetries?: number;\n  scopeMapping?: HashMap<string>;\n  availableLangs?: AvailableLangs;\n  flatten?: {\n    aot?: boolean;\n  };\n  missingHandler?: {\n    useFallbackTranslation?: boolean;\n    allowEmpty?: boolean;\n  };\n};\n\nexport const TRANSLOCO_CONFIG = new InjectionToken('TRANSLOCO_CONFIG', {\n  providedIn: 'root',\n  factory: () => {\n    return {};\n  }\n});\n\nexport const defaultConfig: TranslocoConfig = {\n  defaultLang: 'en',\n  reRenderOnLangChange: false,\n  prodMode: false,\n  failedRetries: 2,\n  availableLangs: [],\n  missingHandler: {\n    useFallbackTranslation: false,\n    allowEmpty: false\n  },\n  flatten: {\n    aot: false\n  }\n};\n","import { InjectionToken } from '@angular/core';\nimport { TranslocoConfig } from './transloco.config';\n\nexport const TRANSLOCO_MISSING_HANDLER = new InjectionToken('TRANSLOCO_MISSING_HANDLER');\n\nexport interface TranslocoMissingHandler {\n  handle(key: string, config: TranslocoConfig): any;\n}\n\nexport class DefaultHandler implements TranslocoMissingHandler {\n  handle(key: string, config: TranslocoConfig) {\n    if (!config.prodMode) {\n      const msg = `Missing translation for '${key}'`;\n      console.warn(`%c ${msg}`, 'font-size: 12px; color: red');\n    }\n\n    return key;\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Translation } from './types';\n\nexport const TRANSLOCO_INTERCEPTOR = new InjectionToken('TRANSLOCO_INTERCEPTOR');\n\nexport interface TranslocoInterceptor {\n  preSaveTranslation(translation: Translation, lang: string): Translation;\n\n  preSaveTranslationKey(key: string, value: string, lang: string): string;\n}\n\nexport class DefaultInterceptor implements TranslocoInterceptor {\n  preSaveTranslation(translation: Translation, lang: string): Translation {\n    return translation;\n  }\n\n  preSaveTranslationKey(key: string, value: string, lang: string): string {\n    return value;\n  }\n}\n","import { Inject, InjectionToken } from '@angular/core';\nimport { TRANSLOCO_CONFIG, TranslocoConfig } from './transloco.config';\n\nexport const TRANSLOCO_FALLBACK_STRATEGY = new InjectionToken<TranslocoFallbackStrategy>('TRANSLOCO_FALLBACK_STRATEGY');\n\nexport interface TranslocoFallbackStrategy {\n  getNextLangs(failedLang: string): string[];\n}\n\nexport class DefaultFallbackStrategy implements TranslocoFallbackStrategy {\n  constructor(@Inject(TRANSLOCO_CONFIG) private userConfig: TranslocoConfig) {}\n\n  getNextLangs(failedLang: string) {\n    const fallbackLang = this.userConfig.fallbackLang;\n    if (!fallbackLang) {\n      throw new Error('When using the default fallback, a fallback language must be provided in the config!');\n    }\n\n    return Array.isArray(fallbackLang) ? fallbackLang : [fallbackLang];\n  }\n}\n","import { TranslocoConfig } from './transloco.config';\n\nexport function mergeConfig(defaultConfig: TranslocoConfig, userConfig: Partial<TranslocoConfig>) {\n  return {\n    ...defaultConfig,\n    ...userConfig,\n    missingHandler: {\n      ...defaultConfig.missingHandler,\n      ...userConfig.missingHandler\n    },\n    flatten: {\n      ...defaultConfig.flatten,\n      ...userConfig.flatten\n    }\n  };\n}\n","import { TranslocoService } from './transloco.service';\nimport { isString } from './helpers';\nimport { take } from 'rxjs/operators';\n\n/*\n * @example\n *\n * given: lazy-page/en => lazy-page\n *\n */\nexport function getScopeFromLang(lang: string): string {\n  if (!lang) {\n    return '';\n  }\n  const split = lang.split('/');\n  split.pop();\n  return split.join('/');\n}\n\n/*\n * @example\n *\n * given: lazy-page/en => en\n *\n */\nexport function getLangFromScope(lang: string): string {\n  if (!lang) {\n    return '';\n  }\n  const split = lang.split('/');\n  return split.pop();\n}\n\n/**\n * @example\n *\n * getPipeValue('todos|scoped', 'scoped') [true, 'todos']\n * getPipeValue('en|static', 'static') [true, 'en']\n * getPipeValue('en', 'static') [false, 'en']\n */\nexport function getPipeValue(str: string, value: string, char = '|'): [boolean, string] {\n  if (isString(str)) {\n    const splitted = str.split(char);\n    const lastItem = splitted.pop();\n    return lastItem === value ? [true, splitted.toString()] : [false, lastItem];\n  }\n\n  return [false, ''];\n}\n\nexport function shouldListenToLangChanges(service: TranslocoService, lang: string) {\n  const [hasStatic] = getPipeValue(lang, 'static');\n  if (hasStatic === false) {\n    // If we didn't get 'lang|static' check if it's set in the global level\n    return service.config.reRenderOnLangChange;\n  }\n\n  // We have 'lang|static' so don't listen to lang changes\n  return false;\n}\n\nexport function listenOrNotOperator(listenToLangChange: boolean) {\n  return listenToLangChange ? source => source : take(1);\n}\n\nexport function prependScope(inlineLoader, scope) {\n  return Object.keys(inlineLoader).reduce((acc, lang) => {\n    acc[`${scope}/${lang}`] = inlineLoader[lang];\n    return acc;\n  }, {});\n}\n","import { TranslocoLoader } from './transloco.loader';\nimport { InlineLoader } from './types';\nimport { isFunction } from './helpers';\n\nexport function resolveLoader(path: string, mainLoader: TranslocoLoader, inlineLoader: InlineLoader) {\n  if(inlineLoader) {\n    const pathLoader = inlineLoader[path];\n    if(isFunction(pathLoader) === false) {\n      throw `You're using an inline loader but didn't provide a loader for ${path}`;\n    }\n\n    return inlineLoader[path]().then(res => res.default);\n  }\n\n  return mainLoader.getTranslation(path);\n}\n","import { from } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { resolveLoader } from './resolve-loader';\nimport { TranslocoLoader } from './transloco.loader';\nimport { InlineLoader } from './types';\n\nexport function getFallbacksLoaders(mainPath: string, fallbackPath: string, mainLoader: TranslocoLoader, inlineLoader: InlineLoader) {\n  return [mainPath, fallbackPath].map(path => {\n    const loader = resolveLoader(path, mainLoader, inlineLoader);\n\n    return from(loader).pipe(\n      map(translation => ({\n        translation,\n        lang: path\n      }))\n    );\n  });\n}\n","import { Inject, Injectable, OnDestroy, Optional } from '@angular/core';\nimport { BehaviorSubject, combineLatest, forkJoin, from, Observable, of, Subject, Subscription } from 'rxjs';\nimport { catchError, map, retry, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { DefaultLoader, TRANSLOCO_LOADER, TranslocoLoader } from './transloco.loader';\nimport { TRANSLOCO_TRANSPILER, TranslocoTranspiler } from './transloco.transpiler';\nimport { AvailableLangs, HashMap, InlineLoader, LoadOptions, SetTranslationOptions, TranslateParams, Translation, TranslocoEvents } from './types';\nimport { flatten, getValue, isString, size, toCamelCase, unflatten } from './helpers';\nimport { defaultConfig, TRANSLOCO_CONFIG, TranslocoConfig } from './transloco.config';\nimport { TRANSLOCO_MISSING_HANDLER, TranslocoMissingHandler } from './transloco-missing-handler';\nimport { TRANSLOCO_INTERCEPTOR, TranslocoInterceptor } from './transloco.interceptor';\nimport { TRANSLOCO_FALLBACK_STRATEGY, TranslocoFallbackStrategy } from './transloco-fallback-strategy';\nimport { mergeConfig } from './merge-config';\nimport { getLangFromScope, getScopeFromLang } from './shared';\nimport { getFallbacksLoaders } from './get-fallbacks-loaders';\nimport { resolveLoader } from './resolve-loader';\n\nlet service: TranslocoService;\n\nexport function translate<T = any>(key: TranslateParams, params: HashMap = {}, lang?: string): T {\n  return service.translate(key, params, lang);\n}\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoService implements OnDestroy {\n  private subscription: Subscription;\n  private translations = new Map<string, Translation>();\n  private cache = new Map<string, Observable<Translation>>();\n  private firstFallbackLang: string | null = null;\n  private defaultLang: string;\n  private mergedConfig: TranslocoConfig;\n  private availableLangs: AvailableLangs = [];\n  private isResolvedMissingOnce = false;\n  private lang: BehaviorSubject<string>;\n  langChanges$: Observable<string>;\n\n  private events = new Subject<TranslocoEvents>();\n  events$ = this.events.asObservable();\n\n  private failedCounter = 0;\n  private failedLangs = new Set<string>();\n\n  constructor(\n    @Optional() @Inject(TRANSLOCO_LOADER) private loader: TranslocoLoader,\n    @Inject(TRANSLOCO_TRANSPILER) private parser: TranslocoTranspiler,\n    @Inject(TRANSLOCO_MISSING_HANDLER) private missingHandler: TranslocoMissingHandler,\n    @Inject(TRANSLOCO_INTERCEPTOR) private interceptor: TranslocoInterceptor,\n    @Inject(TRANSLOCO_CONFIG) private userConfig: TranslocoConfig,\n    @Inject(TRANSLOCO_FALLBACK_STRATEGY) private fallbackStrategy: TranslocoFallbackStrategy\n  ) {\n    if(!this.loader) {\n      this.loader = new DefaultLoader(this.translations);\n    }\n    service = this;\n    this.mergedConfig = mergeConfig(defaultConfig, userConfig);\n\n    this.setAvailableLangs(this.mergedConfig.availableLangs);\n    this.setFallbackLangForMissingTranslation(this.mergedConfig);\n    this.setDefaultLang(this.mergedConfig.defaultLang);\n    this.lang = new BehaviorSubject<string>(this.getDefaultLang());\n    // Don't use distinctUntilChanged as we need the ability to update\n    // the value when using setTranslation or setTranslationKeys\n    this.langChanges$ = this.lang.asObservable();\n\n    /**\n     * When we have a failure, we want to define the next language that succeeded as the active\n     */\n    this.subscription = this.events$.subscribe(e => {\n      if(e.type === 'translationLoadSuccess' && e.wasFailure) {\n        // Handle scoped lang\n        const lang = getLangFromScope(e.payload.lang);\n        this.setActiveLang(lang);\n      }\n    });\n  }\n\n  get config(): TranslocoConfig {\n    return this.mergedConfig;\n  }\n\n  getDefaultLang() {\n    return this.defaultLang;\n  }\n\n  setDefaultLang(lang: string) {\n    this.defaultLang = lang;\n  }\n\n  getActiveLang() {\n    return this.lang.getValue();\n  }\n\n  setActiveLang(lang: string) {\n    this.lang.next(lang);\n    return this;\n  }\n\n  setAvailableLangs(langs: AvailableLangs) {\n    this.availableLangs = langs;\n  }\n\n  getAvailableLangs() {\n    return this.availableLangs;\n  }\n\n  load(path: string, options: LoadOptions = {}): Observable<Translation> {\n    if(this.cache.has(path) === false) {\n      let loadTranslation: Observable<Translation | { translation: Translation; lang: string }[]>;\n\n      if(this.useFallbackTranslation(path)) {\n        // if the path is scope the fallback should be `scope/fallbackLang`;\n        const fallback = this._isLangScoped(path)\n          ? `${getScopeFromLang(path)}/${this.firstFallbackLang}`\n          : this.firstFallbackLang;\n\n        const loaders = getFallbacksLoaders(path, fallback, this.loader, options.inlineLoader);\n        loadTranslation = forkJoin(loaders);\n      } else {\n        const loader = resolveLoader(path, this.loader, options.inlineLoader);\n        loadTranslation = from(loader);\n      }\n\n      const load$ = loadTranslation.pipe(\n        retry(this.config.failedRetries),\n        catchError(() => this.handleFailure(path, options)),\n        tap(translation => {\n          if(Array.isArray(translation)) {\n            translation.forEach(t => {\n              this.handleSuccess(t.lang, t.translation);\n              // Save the fallback in cache so we'll not create a redundant request\n              if(t.lang !== path) {\n                this.cache.set(t.lang, of({}));\n              }\n            });\n            return;\n          }\n          this.handleSuccess(path, translation);\n        }),\n        shareReplay(1)\n      );\n\n      this.cache.set(path, load$);\n    }\n\n    return this.cache.get(path);\n  }\n\n  /**\n   * Gets the instant translated value of a key\n   *\n   * @example\n   *\n   * translate<string>('hello')\n   * translate('hello', { value: 'value' })\n   * translate<string[]>(['hello', 'key'])\n   * translate('hello', { }, 'en')\n   * translate('scope.someKey', { }, 'en')\n   */\n  translate<T = any>(key: TranslateParams, params: HashMap = {}, lang = this.getActiveLang()): T {\n    let resolveLang = lang;\n    let scope;\n\n    // If lang is scope we need to check the following cases:\n    // todos/es => in this case we should take `es` as lang\n    // todos => in this case we should set the active lang as lang\n    if(this._isLangScoped(lang)) {\n      // en for example\n      const langFromScope = getLangFromScope(lang);\n      // en is lang\n      const hasLang = this._isLang(langFromScope);\n      // take en\n      resolveLang = hasLang ? langFromScope : this.getActiveLang();\n      // find the scope\n      scope = this.getMappedScope(hasLang ? getScopeFromLang(lang) : lang);\n    }\n\n    if(Array.isArray(key)) {\n      return key.map(k => this.translate(scope ? `${scope}.${k}` : k, params, resolveLang)) as any;\n    }\n\n    key = scope ? `${scope}.${key}` : key;\n\n    if(!key) {\n      return this.missingHandler.handle(key, this.config);\n    }\n\n    const translation = this.getTranslation(resolveLang);\n    const value = translation[key];\n\n    if(!value) {\n      return this.handleMissingKey(key, value, params);\n    }\n\n    return this.parser.transpile(value, params, translation);\n  }\n\n  /**\n   * Gets the translated value of a key as observable\n   *\n   * @example\n   *\n   * selectTranslate<string>('hello').subscribe(value => ...)\n   * selectTranslate<string>('hello', {}, 'es').subscribe(value => ...)\n   * selectTranslate<string>('hello', {}, 'todos').subscribe(value => ...)\n   *\n   */\n  selectTranslate<T = any>(key: TranslateParams, params?: HashMap, lang?: string, _isObject = false): Observable<T> {\n    const load = lang =>\n      this.load(lang).pipe(\n        map(() => (_isObject ? this.translateObject(key, params, lang) : this.translate(key, params, lang)))\n      );\n    if(isString(lang)) {\n      const langOrScope = this._completeScopeWithLang(lang);\n      return load(langOrScope);\n    } else {\n      // if the user doesn't pass lang, we need to listen to lang changes and update the value accordingly\n      return this.langChanges$.pipe(switchMap(lang => load(lang)));\n    }\n  }\n\n  /**\n   * Translate the given path that returns an object\n   *\n   * @example\n   *\n   * service.translateObject('path.to.object', {'subpath': { value: 'someValue'}}) => returns translated object\n   *\n   */\n  translateObject<T = any>(key: TranslateParams, params?: HashMap, lang = this.getActiveLang()): T {\n    if(Array.isArray(key)) {\n      return key.map(k => this.translateObject(k, params, lang)) as any;\n    }\n\n    const translation = this.getTranslation(lang);\n    // TODO: optimize it (we can build this specific object)\n    const value = getValue(unflatten(translation), key);\n    return this.parser.transpile(value, params, translation);\n  }\n\n  selectTranslateObject<T = any>(key: TranslateParams, params?: HashMap, lang?: string): Observable<T> {\n    return this.selectTranslate(key, params, lang, true);\n  }\n\n  /**\n   * Gets an object of translations for a given language\n   *\n   * @example\n   *\n   * getTranslation()\n   * getTranslation('en')\n   * getTranslation('admin-page/en')\n   */\n  getTranslation(): Map<string, Translation>;\n  getTranslation(lang: string): Translation;\n  getTranslation(lang?: string): Map<string, Translation> | Translation {\n    return lang ? this.translations.get(lang) || {} : this.translations;\n  }\n\n  /**\n   * Gets an object of translations for a given language\n   *\n   * @example\n   *\n   * selectTranslation().subscribe()\n   * selectTranslation('es').subscribe()\n   */\n  selectTranslation(lang?: string): Observable<Translation> {\n    const language = lang || this.getActiveLang();\n    return this.load(language).pipe(map(() => this.getTranslation(language)));\n  }\n\n  /**\n   * Sets or merge a given translation object to current lang\n   *\n   * @example\n   *\n   * setTranslation({ ... })\n   * setTranslation({ ... }, 'en')\n   * setTranslation({ ... }, 'es', { merge: false } )\n   * setTranslation({ ... }, 'todos/en', { merge: false } )\n   */\n  setTranslation(translation: Translation, lang = this.getActiveLang(), options: SetTranslationOptions = {}) {\n    const defaults = { merge: true, emitChange: true };\n    const mergedOptions = { ...defaults, ...options };\n    const scope = getScopeFromLang(lang);\n\n    /**\n     * If this isn't a scope we use the whole translation as is\n     * otherwise we need to flat the scope and use it\n     */\n    let flattenScopeOrTranslation = translation;\n\n    // Merged the scoped language into the active language\n    if(scope) {\n      const key = this.getMappedScope(scope);\n      flattenScopeOrTranslation = flatten({ [key]: translation });\n    }\n\n    const currentLang = scope ? getLangFromScope(lang) : lang;\n\n    const mergedTranslation = {\n      ...(mergedOptions.merge && this.getTranslation(currentLang)),\n      ...flattenScopeOrTranslation\n    };\n\n    const withHook = this.interceptor.preSaveTranslation(mergedTranslation, currentLang);\n    const flattenTranslation = this.mergedConfig.flatten.aot ? withHook : flatten(withHook);\n\n    this.translations.set(currentLang, flattenTranslation);\n    mergedOptions.emitChange && this.setActiveLang(this.getActiveLang());\n  }\n\n  /**\n   * Sets translation key with given value\n   *\n   * @example\n   *\n   * setTranslationKey('key', 'value')\n   * setTranslationKey('key.nested', 'value')\n   * setTranslationKey('key.nested', 'value', 'en')\n   */\n  setTranslationKey(key: string, value: string, lang = this.getActiveLang()) {\n    const withHook = this.interceptor.preSaveTranslationKey(key, value, lang);\n    const newValue = {\n      ...this.getTranslation(lang),\n      [key]: withHook\n    };\n    this.setTranslation(newValue, lang);\n  }\n\n  handleMissingKey(key: string, value: any, params?: HashMap) {\n    if(this.config.missingHandler.allowEmpty && value === '') {\n      return '';\n    }\n\n    if(this.useFallbackTranslation() && !this.isResolvedMissingOnce) {\n      this.isResolvedMissingOnce = true;\n      const value = this.translate(key, params, this.firstFallbackLang);\n      this.isResolvedMissingOnce = false;\n      return value;\n    }\n\n    return this.missingHandler.handle(key, this.config);\n  }\n\n  /**\n   * @internal\n   */\n  _isLangScoped(lang: string) {\n    return this.getAvailableLangsIds().indexOf(lang) === -1;\n  }\n\n  /**\n   * @internal\n   */\n  _isLang(lang: string) {\n    return this.getAvailableLangsIds().indexOf(lang) !== -1;\n  }\n\n  /**\n   * @internal\n   *\n   * We always want to make sure the global lang is loaded\n   * before loading the scope since you can access both via the pipe/directive.\n   */\n  _loadDependencies(path: string, inlineLoader?: InlineLoader): Observable<Translation | Translation[]> {\n    const mainLang = getLangFromScope(path);\n\n    if(this._isLangScoped(path) && !this.isLoadedTranslation(mainLang)) {\n      return combineLatest(this.load(mainLang), this.load(path, { inlineLoader }));\n    }\n\n    return this.load(path, { inlineLoader });\n  }\n\n  private isLoadedTranslation(lang: string) {\n    return size(this.getTranslation(lang));\n  }\n\n  /**\n   * @internal\n   */\n  _completeScopeWithLang(langOrScope: string) {\n    if(this._isLangScoped(langOrScope) && !this._isLang(getLangFromScope(langOrScope))) {\n      return `${langOrScope}/${this.getActiveLang()}`;\n    }\n    return langOrScope;\n  }\n\n  /**\n   * @internal\n   */\n  _setScopeAlias(scope: string, alias: string) {\n    if(!this.mergedConfig.scopeMapping) {\n      this.mergedConfig.scopeMapping = {};\n    }\n    this.mergedConfig.scopeMapping[scope] = alias;\n  }\n\n  private getAvailableLangsIds(): string[] {\n    const first = this.getAvailableLangs()[0];\n\n    if(isString(first)) {\n      return this.getAvailableLangs() as string[];\n    }\n\n    return (this.getAvailableLangs() as { id: string }[]).map(l => l.id);\n  }\n\n  private useFallbackTranslation(lang?: string) {\n    return this.config.missingHandler.useFallbackTranslation && lang !== this.firstFallbackLang;\n  }\n\n  private handleSuccess(lang: string, translation: Translation) {\n    this.setTranslation(translation, lang, { emitChange: false });\n    if(this.failedLangs.has(lang) === false) {\n      this.events.next({\n        wasFailure: !!this.failedLangs.size,\n        type: 'translationLoadSuccess',\n        payload: {\n          lang\n        }\n      });\n\n      this.failedCounter = 0;\n    } else {\n      this.cache.delete(lang);\n      this.failedLangs.delete(lang);\n    }\n  }\n\n  private handleFailure(lang: string, mergedOptions) {\n    const splitted = lang.split('/');\n\n    this.failedLangs.add(lang);\n    const fallbacks = mergedOptions.fallbackLangs || this.fallbackStrategy.getNextLangs(lang);\n    const nextLang = fallbacks[this.failedCounter];\n\n    const isFallbackLang = nextLang === splitted[splitted.length - 1];\n\n    if(!nextLang || isFallbackLang) {\n      let msg = `Unable to load translation and all the fallback languages`;\n      if(splitted.length > 1) {\n        msg += `, did you misspelled the scope name?`;\n      }\n\n      throw new Error(msg);\n    }\n\n    let resolveLang = nextLang;\n    // if it's scoped lang\n    if(splitted.length > 1) {\n      // We need to resolve it to:\n      // todos/langNotExists => todos/nextLang\n      splitted[splitted.length - 1] = nextLang;\n      resolveLang = splitted.join('/');\n    }\n\n    this.failedCounter++;\n    this.events.next({\n      type: 'translationLoadFailure',\n      payload: {\n        lang\n      }\n    });\n\n    return this.load(resolveLang);\n  }\n\n  private setFallbackLangForMissingTranslation({ fallbackLang }: TranslocoConfig): void {\n    if(this.useFallbackTranslation && fallbackLang) {\n      this.firstFallbackLang = Array.isArray(fallbackLang) ? fallbackLang[0] : fallbackLang;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  private getMappedScope(scope: string): string {\n    const { scopeMapping = {} } = this.config;\n    return scopeMapping[scope] || toCamelCase(scope);\n  }\n}\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  template: `\r\n    <div class=\"transloco-loader-template\" [innerHTML]=\"html\"></div>\r\n  `\r\n})\r\nexport class TranslocoLoaderComponent {\r\n  @Input() html: string;\r\n}\r\n","import { ComponentRef, TemplateRef, ViewContainerRef, ComponentFactoryResolver, Injector, Type } from '@angular/core';\r\nimport { isString } from './helpers';\r\nimport { TranslocoLoaderComponent } from './loader-component.component';\r\n\r\nexport type View = string | TemplateRef<any> | Type<any>;\r\n\r\nexport class TemplateHandler {\r\n  private injector: Injector;\r\n\r\n  constructor(private view: View, private vcr: ViewContainerRef) {\r\n    this.injector = this.vcr.injector;\r\n  }\r\n\r\n  attachView() {\r\n    if (this.view instanceof TemplateRef) {\r\n      this.vcr.createEmbeddedView(this.view);\r\n    } else if (isString(this.view)) {\r\n      const componentRef = this.createComponent<TranslocoLoaderComponent>(TranslocoLoaderComponent);\r\n      componentRef.instance.html = this.view;\r\n      componentRef.hostView.detectChanges();\r\n    } else {\r\n      this.createComponent(this.view);\r\n    }\r\n  }\r\n\r\n  detachView() {\r\n    this.vcr.clear();\r\n  }\r\n\r\n  private createComponent<T>(cmp: Type<any>): ComponentRef<T> {\r\n    const cfr = this.injector.get(ComponentFactoryResolver);\r\n    const factory = cfr.resolveComponentFactory(cmp);\r\n\r\n    return this.vcr.createComponent(factory);\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\n\nexport const TRANSLOCO_LANG = new InjectionToken<string>('TRANSLOCO_LANG');\n","import { InjectionToken, ComponentRef } from '@angular/core';\n\nexport const TRANSLOCO_LOADING_TEMPLATE = new InjectionToken<{ component: ComponentRef<any> | string }>(\n  'TRANSLOCO_LOADING_TEMPLATE'\n);\n","import { InjectionToken } from '@angular/core';\nimport { TranslocoScope } from './types';\n\nexport const TRANSLOCO_SCOPE = new InjectionToken<TranslocoScope>('TRANSLOCO_SCOPE');\n","import { getLangFromScope, getPipeValue, getScopeFromLang } from './shared';\n\ntype LangResolverParams = {\n  inline: string | undefined;\n  provider: string | undefined;\n  active: string | undefined;\n};\n\nexport class LangResolver {\n  initialized = false;\n\n  // inline => provider => active\n  resolve(\n    { inline, provider, active }: LangResolverParams = { inline: undefined, provider: undefined, active: undefined }\n  ) {\n    let lang = active;\n    /**\n     * When the user changes the lang we need to update\n     * the view. Otherwise, the lang will remain the inline/provided lang\n     */\n    if (this.initialized) {\n      lang = active;\n      return lang;\n    }\n\n    if (provider) {\n      const [_, extracted] = getPipeValue(provider, 'static');\n      lang = extracted;\n    }\n\n    if (inline) {\n      const [_, extracted] = getPipeValue(inline, 'static');\n      lang = extracted;\n    }\n\n    this.initialized = true;\n    return lang;\n  }\n\n  /**\n   *\n   * Resolve the lang\n   *\n   * @example\n   *\n   * resolveLangBasedOnScope('todos/en') => en\n   * resolveLangBasedOnScope('en') => en\n   *\n   */\n  resolveLangBasedOnScope(lang: string) {\n    const scope = getScopeFromLang(lang);\n    return scope ? getLangFromScope(lang) : lang;\n  }\n\n  /**\n   *\n   * Resolve the lang path for loading\n   *\n   * @example\n   *\n   * resolveLangPath('todos', 'en') => todos/en\n   * resolveLangPath('en') => en\n   *\n   */\n  resolveLangPath(lang: string, scope: string | undefined) {\n    return scope ? `${scope}/${lang}` : lang;\n  }\n}\n","import { TranslocoScope, ProviderScope } from './types';\nimport { TranslocoService } from './transloco.service';\nimport { isScopeObject, toCamelCase } from './helpers';\n\ntype ScopeResolverParams = {\n  inline: string | undefined;\n  provider: TranslocoScope;\n};\n\nexport class ScopeResolver {\n  constructor(private translocoService: TranslocoService) {}\n\n  // inline => provider\n  resolve({ inline, provider }: ScopeResolverParams = { inline: undefined, provider: undefined }): string {\n    if (inline) {\n      return inline;\n    }\n\n    if (provider) {\n      if (isScopeObject(provider)) {\n        const { scope, alias = toCamelCase(scope) } = provider as ProviderScope;\n        this.translocoService._setScopeAlias(scope, alias);\n        return scope;\n      }\n\n      return provider as string;\n    }\n\n    return undefined;\n  }\n}\n","import { ChangeDetectorRef, Directive, ElementRef, EmbeddedViewRef, Inject, Input, OnChanges, OnDestroy, OnInit, Optional, TemplateRef, Type, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { TemplateHandler, View } from './template-handler';\nimport { TRANSLOCO_LANG } from './transloco-lang';\nimport { TRANSLOCO_LOADING_TEMPLATE } from './transloco-loading-template';\nimport { TRANSLOCO_SCOPE } from './transloco-scope';\nimport { TranslocoService } from './transloco.service';\nimport { HashMap, InlineLoader, TranslocoScope } from './types';\nimport { listenOrNotOperator, prependScope, shouldListenToLangChanges } from './shared';\nimport { LangResolver } from './lang-resolver';\nimport { ScopeResolver } from './scope-resolver';\nimport { hasInlineLoader } from './helpers';\n\n@Directive({\n  selector: '[transloco]'\n})\nexport class TranslocoDirective implements OnInit, OnDestroy, OnChanges {\n  subscription: Subscription | null;\n  view: EmbeddedViewRef<any>;\n  private translationMemo: { [key: string]: { value: any; params: HashMap } } = {};\n\n  @Input('transloco') key: string;\n  @Input('translocoParams') params: HashMap = {};\n  @Input('translocoScope') inlineScope: string | undefined;\n  @Input('translocoRead') inlineRead: string | undefined;\n  @Input('translocoLang') inlineLang: string | undefined;\n  @Input('translocoLoadingTpl') inlineTpl: TemplateRef<any> | undefined;\n\n  private currentLang: string;\n  private loaderTplHandler: TemplateHandler = null;\n  // Whether we already rendered the view once\n  private initialized = false;\n  private path: string;\n  private langResolver = new LangResolver();\n  private scopeResolver = new ScopeResolver(this.translocoService);\n\n  constructor(\n    private translocoService: TranslocoService,\n    @Optional() private tpl: TemplateRef<{ $implicit: (key: string, params?: HashMap) => any }>,\n    @Optional() @Inject(TRANSLOCO_SCOPE) private providerScope: TranslocoScope,\n    @Optional() @Inject(TRANSLOCO_LANG) private providerLang: string | null,\n    @Optional() @Inject(TRANSLOCO_LOADING_TEMPLATE) private providedLoadingTpl: Type<any> | string,\n    private vcr: ViewContainerRef,\n    private cdr: ChangeDetectorRef,\n    private host: ElementRef\n  ) {\n  }\n\n  ngOnInit() {\n    const loadingTpl = this.getLoadingTpl();\n    if(loadingTpl) {\n      this.loaderTplHandler = new TemplateHandler(loadingTpl, this.vcr);\n      this.loaderTplHandler.attachView();\n    }\n\n    const listenToLangChange = shouldListenToLangChanges(this.translocoService, this.providerLang || this.inlineLang);\n\n    this.subscription = this.translocoService.langChanges$\n      .pipe(\n        switchMap(activeLang => {\n          const lang = this.langResolver.resolve({\n            inline: this.inlineLang,\n            provider: this.providerLang,\n            active: activeLang\n          });\n          const scope = this.scopeResolver.resolve({\n            inline: this.inlineScope,\n            provider: this.providerScope\n          });\n\n          this.path = this.langResolver.resolveLangPath(lang, scope);\n          const inlineLoader: InlineLoader | null = hasInlineLoader(this.providerScope) ? prependScope(this.providerScope.loader, scope) : null;\n\n          return this.translocoService._loadDependencies(this.path, inlineLoader);\n        }),\n        listenOrNotOperator(listenToLangChange)\n      )\n      .subscribe(() => {\n        this.currentLang = this.langResolver.resolveLangBasedOnScope(this.path);\n        this.tpl === null ? this.simpleStrategy() : this.structuralStrategy(this.currentLang, this.inlineRead);\n        this.cdr.markForCheck();\n        this.initialized = true;\n      });\n  }\n\n  ngOnChanges(changes) {\n    // We need to support dynamic keys/params, so if this is not the first change CD cycle\n    // we need to run the function again in order to update the value\n    const notInit = Object.keys(changes).some(v => changes[v].firstChange === false);\n    notInit && this.simpleStrategy();\n  }\n\n  private simpleStrategy() {\n    this.detachLoader();\n    this.host.nativeElement.innerText = this.translocoService.translate(this.key, this.params, this.currentLang);\n  }\n\n  private structuralStrategy(lang: string, read: string | undefined) {\n    this.translationMemo = {};\n\n    if(this.view) {\n      // when the lang changes we need to change the reference so Angular will update the view\n      this.view.context['$implicit'] = this.getTranslateFn(lang, read);\n    } else {\n      this.detachLoader();\n      this.view = this.vcr.createEmbeddedView(this.tpl, {\n        $implicit: this.getTranslateFn(lang, read)\n      });\n    }\n  }\n\n  private getTranslateFn(lang: string, read: string | undefined): (key: string, params?: HashMap) => any {\n    return (key: string, params: HashMap) => {\n      const withRead = read ? `${read}.${key}` : key;\n      const withParams = params ? `${withRead}${JSON.stringify(params)}` : withRead;\n      if(this.translationMemo.hasOwnProperty(withParams)) {\n        return this.translationMemo[withParams].value;\n      }\n      this.translationMemo[withParams] = {\n        params,\n        value: this.translocoService.translate(withRead, params, lang)\n      };\n\n      return this.translationMemo[withParams].value;\n    };\n  }\n\n  private getLoadingTpl(): View {\n    return this.inlineTpl || this.providedLoadingTpl;\n  }\n\n  ngOnDestroy() {\n    this.subscription && this.subscription.unsubscribe();\n  }\n\n  private detachLoader() {\n    this.loaderTplHandler && this.loaderTplHandler.detachView();\n  }\n}\n","import { ChangeDetectorRef, Inject, OnDestroy, Optional, Pipe, PipeTransform } from '@angular/core';\nimport { TranslocoService } from './transloco.service';\nimport { HashMap, InlineLoader, ProviderScope } from './types';\nimport { switchMap } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { TRANSLOCO_SCOPE } from './transloco-scope';\nimport { TRANSLOCO_LANG } from './transloco-lang';\nimport { listenOrNotOperator, prependScope, shouldListenToLangChanges } from './shared';\nimport { LangResolver } from './lang-resolver';\nimport { ScopeResolver } from './scope-resolver';\nimport { hasInlineLoader } from './helpers';\n\n@Pipe({\n  name: 'transloco',\n  pure: false\n})\nexport class TranslocoPipe implements PipeTransform, OnDestroy {\n  private subscription: Subscription | null = null;\n  private lastValue: string | undefined;\n  private lastKey: string | undefined;\n  private listenToLangChange: boolean;\n  private path: string;\n  private langResolver = new LangResolver();\n  private scopeResolver = new ScopeResolver(this.translocoService);\n\n  constructor(\n    private translocoService: TranslocoService,\n    @Optional() @Inject(TRANSLOCO_SCOPE) private providerScope: string | ProviderScope | null,\n    @Optional() @Inject(TRANSLOCO_LANG) private providerLang: string | null,\n    private cdr: ChangeDetectorRef\n  ) {\n    this.listenToLangChange = shouldListenToLangChanges(this.translocoService, this.providerLang);\n  }\n\n  transform(key: string, params?: HashMap | undefined, inlineLang?: string | undefined): string {\n    if (!key) {\n      return key;\n    }\n\n    const keyName = params ? `${key}${JSON.stringify(params)}` : key;\n\n    if (keyName === this.lastKey) {\n      return this.lastValue;\n    }\n\n    this.lastKey = keyName;\n    this.subscription && this.subscription.unsubscribe();\n\n    this.subscription = this.translocoService.langChanges$\n      .pipe(\n        switchMap(activeLang => {\n          const lang = this.langResolver.resolve({\n            inline: inlineLang,\n            provider: this.providerLang,\n            active: activeLang\n          });\n\n          let scope = this.scopeResolver.resolve({ inline: undefined, provider: this.providerScope });\n          this.path = this.langResolver.resolveLangPath(lang, scope);\n\n          const inlineLoader: InlineLoader | null = hasInlineLoader(this.providerScope) ? prependScope(this.providerScope.loader, scope) : null;\n\n          return this.translocoService._loadDependencies(this.path, inlineLoader);\n        }),\n        listenOrNotOperator(this.listenToLangChange)\n      )\n      .subscribe(() => this.updateValue(key, params));\n\n    return this.lastValue;\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  private updateValue(key: string, params?: HashMap | undefined) {\n    const lang = this.langResolver.resolveLangBasedOnScope(this.path);\n    this.lastValue = this.translocoService.translate(key, params, lang);\n    this.cdr.markForCheck();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TranslocoLoaderComponent } from './loader-component.component';\nimport { TranslocoDirective } from './transloco.directive';\nimport { DefaultTranspiler, TRANSLOCO_TRANSPILER } from './transloco.transpiler';\nimport { TranslocoPipe } from './transloco.pipe';\nimport { DefaultHandler, TRANSLOCO_MISSING_HANDLER } from './transloco-missing-handler';\nimport { DefaultInterceptor, TRANSLOCO_INTERCEPTOR } from './transloco.interceptor';\nimport { DefaultFallbackStrategy, TRANSLOCO_FALLBACK_STRATEGY } from './transloco-fallback-strategy';\nimport { TRANSLOCO_CONFIG } from './transloco.config';\n\nexport const defaultProviders = [\n  {\n    provide: TRANSLOCO_TRANSPILER,\n    useClass: DefaultTranspiler\n  },\n  {\n    provide: TRANSLOCO_MISSING_HANDLER,\n    useClass: DefaultHandler\n  },\n  {\n    provide: TRANSLOCO_INTERCEPTOR,\n    useClass: DefaultInterceptor\n  },\n  {\n    provide: TRANSLOCO_FALLBACK_STRATEGY,\n    useClass: DefaultFallbackStrategy,\n    deps: [TRANSLOCO_CONFIG]\n  }\n];\n\n@NgModule({\n  declarations: [TranslocoDirective, TranslocoPipe, TranslocoLoaderComponent],\n  providers: [defaultProviders],\n  exports: [TranslocoDirective, TranslocoPipe],\n  entryComponents: [TranslocoLoaderComponent]\n})\nexport class TranslocoModule {}\n","import { Inject, ModuleWithProviders, NgModule } from '@angular/core';\nimport { TRANSLOCO_LOADER, TranslocoLoader } from './transloco.loader';\nimport { HashMap, Translation } from './types';\nimport { Observable, of } from 'rxjs';\nimport { defaultProviders, TranslocoModule } from './transloco.module';\nimport { TRANSLOCO_CONFIG, TranslocoConfig } from './transloco.config';\n\nexport class TestingLoader implements TranslocoLoader {\n  constructor(@Inject('translocoLangs') private langs: HashMap<Translation>) {}\n\n  getTranslation(lang: string): Observable<Translation> | Promise<Translation> {\n    return of(this.langs[lang]);\n  }\n}\n\n@NgModule({\n  exports: [TranslocoModule]\n})\nexport class TranslocoTestingModule {\n  static withLangs(langs: HashMap<Translation>, config: Partial<TranslocoConfig> = {}): ModuleWithProviders {\n    return {\n      ngModule: TranslocoTestingModule,\n      providers: [\n        {\n          provide: 'translocoLangs',\n          useValue: langs\n        },\n        {\n          provide: TRANSLOCO_LOADER,\n          useClass: TestingLoader\n        },\n        defaultProviders,\n        {\n          provide: TRANSLOCO_CONFIG,\n          useValue: { prodMode: true, ...config }\n        }\n      ]\n    };\n  }\n}\n","import { isBrowser } from './helpers';\n\n/**\n * Returns the language code name from the browser, e.g. \"en\"\n */\nexport function getBrowserLang(): string | undefined {\n  if (isBrowser() === false) {\n    return undefined;\n  }\n\n  let browserLang = getBrowserCultureLang();\n  if (browserLang.indexOf('-') !== -1) {\n    browserLang = browserLang.split('-')[0];\n  }\n\n  if (browserLang.indexOf('_') !== -1) {\n    browserLang = browserLang.split('_')[0];\n  }\n\n  return browserLang;\n}\n\n/**\n * Returns the culture language code name from the browser, e.g. \"en-US\"\n */\nexport function getBrowserCultureLang(): string {\n  if (isBrowser() === false) {\n    return undefined;\n  }\n\n  const navigator = window.navigator as any;\n  let browserCultureLang = navigator.languages ? navigator.languages[0] : null;\n  browserCultureLang = browserCultureLang || navigator.language || navigator.browserLanguage || navigator.userLanguage;\n\n  return browserCultureLang;\n}\n"],"names":["of","InjectionToken","Inject","take","from","map","Subject","BehaviorSubject","forkJoin","retry","catchError","tap","shareReplay","switchMap","combineLatest","Injectable","Optional","Component","Input","TemplateRef","ComponentFactoryResolver","Directive","ViewContainerRef","ChangeDetectorRef","ElementRef","Pipe","NgModule"],"mappings":"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"}
